"use client";
import { useAnimation, } from "framer-motion";
import { useParallax } from "@/hooks/paralllelx";
import { useRotateScroll } from "@/hooks/useScrollRotate";
import { useEffect, useRef, useState } from 'react';
import { motion, useInView } from 'framer-motion';

export default function SnakeRevealTop() {
    const { ref, y } = useParallax({ speed: 0.2 })
    const controls = useAnimation();
    // const ref = useRef(null);
    const isInView = useInView(ref, { once: true, margin: "-100px" });

    const { ref: ref1, rotate: rotate1 } = useRotateScroll();
    const { ref: ref2, rotate: rotate2 } = useRotateScroll();
    const { ref: ref3, rotate: rotate3 } = useRotateScroll();
    const { ref: ref4, rotate: rotate4 } = useRotateScroll();
    const { ref: ref5, rotate: rotate5 } = useRotateScroll();
    const { ref: ref6, rotate: rotate6 } = useRotateScroll();


    useEffect(() => {
        if (isInView) {
            controls.start("visible");
        }
    }, [isInView, controls]);

    return (
        <motion.div
            ref={ref}
            style={{ y }}
            className="absolute top-50 left-0 w-full h-auto min-w-full"
            initial={{ opacity: 0 }}
            animate={isInView ? { opacity: 1 } : {}}
            transition={{ duration: 0.5, ease: "easeOut", delay: 0.2 }}
        >
            <svg

                width="100%"
                height="396"
                viewBox="0 0 1429 396"
                fill="none"

                xmlns="http://www.w3.org/2000/svg"
                preserveAspectRatio="xMidYMid slice"
                className="w-full h-auto "
            >
                <defs>
                    {/* Rectangle mask that expands */}
                    <clipPath id="contactSnakeTop">
                        <motion.rect
                            x="0"
                            y="0"
                            height="396"
                            initial={{ width: 0 }}
                            animate={controls}
                            variants={{
                                visible: {
                                    width: "100%",
                                    transition: { duration: 1.5, ease: "easeOut" },
                                },
                            }}
                        />
                    </clipPath>
                </defs>
                <motion.path d="M262.382 18.8317L272.411 34.852L278.473 17.9034L283.183 18.6186L284.429 36.6769L297.787 24.2075L301.334 27.1062L293.11 44.0638L311.227 40.7457L313.137 44.5759L298.893 55.2249L314.721 61.5055L313.908 65.765L295.33 66.6529L307.533 81.4862L304.521 84.9062L288.257 76.0307L291.102 94.5004L286.803 96.545L277.724 80.8374L271.174 97.712L266.464 96.9969L265.705 79.0126L251.398 91.1692L248.225 87.9903L256.749 71.2468L238.096 74.8204L236.722 70.7346L252.454 60.1428L234.977 53.7804L235.627 49.4962L254.23 48.4435L242.327 33.8243L245.151 30.5444L261.603 39.2798L258.458 20.596L262.382 18.8317Z" fill="#A68468"
                    ref={ref1}
                    style={{ rotate: rotate1 }}
                />
                <motion.path d="M201.077 48.8789L207.847 59.6927L211.939 48.2524L215.118 48.7351L215.959 60.9245L224.976 52.5076L227.37 54.4643L221.819 65.9106L234.047 63.6709L235.337 66.2563L225.722 73.4444L236.406 77.6838L235.857 80.559L223.317 81.1583L231.554 91.1708L229.521 93.4793L218.543 87.4883L220.463 99.9554L217.562 101.335L211.433 90.7328L207.012 102.123L203.833 101.64L203.321 89.5011L193.663 97.7068L191.522 95.561L197.275 84.2591L184.684 86.6714L183.757 83.9134L194.376 76.7639L182.579 72.4694L183.018 69.5775L195.575 68.867L187.54 58.999L189.446 56.7851L200.552 62.6814L198.429 50.0699L201.077 48.8789Z" fill="#1CB377"
                    ref={ref2}
                    style={{ rotate: rotate2 }}
                />
                <path d="M1335.5 320.001C1377.41 318.617 1440.5 297.501 1440.5 297.501V381.501C1440.5 381.501 1368.87 395.854 1322.5 395.001C1268.8 394.014 1237.62 389.432 1187 371.501C1145.76 356.893 1124.29 343.681 1087.5 320.001C1042.7 291.166 1022.8 267.759 982 233.501C939.584 197.889 921.721 169.94 874.5 141.001C836.043 117.433 812.359 106.426 769 94.001C726.712 81.8835 701.489 77.7411 657.5 78.001C615.25 78.2507 591.507 83.827 550.5 94.001C508.482 104.426 486.944 116.937 446 131.001C392.332 149.435 363.803 166.197 308 176.501C262.375 184.926 235.659 189.682 189.5 185.001C150.016 180.997 128.111 174.063 91 160.001C53.5974 145.828 0 113.001 0 113.001V16.501C0 16.501 42.6974 50.2284 73.5 66.001C115.823 87.673 142.26 97.5865 189.5 103.001C235.609 108.286 262.492 103.109 308 94.001C356.741 84.2458 381.448 69.032 428.5 53.001C470.291 38.7623 492.571 26.8128 535.5 16.501C582.248 5.27202 609.422 0.0786127 657.5 0.00103905C706.158 -0.0774714 733.901 4.28316 781 16.501C831.12 29.5023 858.987 40.412 904 66.001C946.438 90.1258 966.722 109.484 1004 141.001C1043.86 174.704 1058.71 202.215 1100.5 233.501C1140.28 263.287 1163.85 280.35 1210.5 297.501C1257.05 314.618 1285.93 321.638 1335.5 320.001Z" fill="#FED543"
                    clipPath="url(#contactSnakeTop)"
                />
                <motion.path d="M947.781 67.9583L951.323 72.0792L952.315 67H953.685L954.818 72.0792L958.077 67.9583L959.21 68.6292L957.605 73.8042L962.611 72.0792L963.319 73.0854L959.73 76.7271L964.5 77.8292L964.453 79.075L959.21 80.1292L963.319 83.8188L962.611 84.9208L957.605 83.1L959.21 88.2271L958.077 88.9937L954.818 84.9208L953.685 90H952.315L951.323 84.9208L947.781 88.9937L946.742 88.2271L948.443 83.1L943.295 84.9208L942.728 83.8188L946.742 80.1292L941.5 79.075V77.8292L946.742 76.7271L942.728 73.0854L943.389 72.0313L948.443 73.8042L946.742 68.6292L947.781 67.9583Z" fill="#AF212B"
                     ref={ref3}
                    style={{ rotate: rotate3 }} />
                <motion.path d="M985.252 55.7083L995.262 67.3542L998.065 53H1001.94L1005.14 67.3542L1014.35 55.7083L1017.55 57.6042L1013.01 72.2292L1027.16 67.3542L1029.16 70.1979L1019.02 80.4896L1032.5 83.6042L1032.37 87.125L1017.55 90.1042L1029.16 100.531L1027.16 103.646L1013.01 98.5L1017.55 112.99L1014.35 115.156L1005.14 103.646L1001.94 118H998.065L995.262 103.646L985.252 115.156L982.315 112.99L987.12 98.5L972.572 103.646L970.97 100.531L982.315 90.1042L967.5 87.125V83.6042L982.315 80.4896L970.97 70.1979L972.839 67.2188L987.12 72.2292L982.315 57.6042L985.252 55.7083Z" fill="#0B5399"
                    ref={ref4}
                    style={{ rotate: rotate4 }}
                />
                <motion.path d="M1382.35 223.333L1394.67 237.667L1398.12 220H1402.88L1406.82 237.667L1418.16 223.333L1422.1 225.667L1416.52 243.667L1433.93 237.667L1436.39 241.167L1423.91 253.833L1440.5 257.667L1440.34 262L1422.1 265.667L1436.39 278.5L1433.93 282.333L1416.52 276L1422.1 293.833L1418.16 296.5L1406.82 282.333L1402.88 300H1398.12L1394.67 282.333L1382.35 296.5L1378.73 293.833L1384.65 276L1366.74 282.333L1364.77 278.5L1378.73 265.667L1360.5 262V257.667L1378.73 253.833L1364.77 241.167L1367.07 237.5L1384.65 243.667L1378.73 225.667L1382.35 223.333Z" fill="#293464"
                    ref={ref5}
                    style={{ rotate: rotate5 }}
                />
                <motion.path d="M1326.25 262.25L1334.56 271.925L1336.89 260H1340.11L1342.77 271.925L1350.42 262.25L1353.08 263.825L1349.31 275.975L1361.06 271.925L1362.73 274.287L1354.3 282.837L1365.5 285.425L1365.39 288.35L1353.08 290.825L1362.73 299.488L1361.06 302.075L1349.31 297.8L1353.08 309.837L1350.42 311.638L1342.77 302.075L1340.11 314H1336.89L1334.56 302.075L1326.25 311.638L1323.81 309.837L1327.8 297.8L1315.71 302.075L1314.38 299.488L1323.81 290.825L1311.5 288.35V285.425L1323.81 282.837L1314.38 274.287L1315.94 271.813L1327.8 275.975L1323.81 263.825L1326.25 262.25Z" fill="#FED543"
                    ref={ref6}
                    style={{ rotate: rotate6 }}
                />
            </svg>   </motion.div>
    );
}